package map;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map.Entry;

public class Wnsense{
	
	HashSet<String> stops;
	HashMap<String,Double[]> word2vec;
	HashMap<String,Integer[]> index;
	String[] lines;
	Double[][] id2vec;
	int[] flag;
	
	int size;
	String vecFile;
	/////////////////////Methods//////////////////
	
	// Constructor
	public Wnsense(Options option){
		
		vecFile = option.workPath + option.vecFile;
		word2vec = new HashMap<String,Double[]>();
		id2vec = new Double[][size];
		
	}
	
	public boolean readVec(){
		try{
			BufferedReader vecReader = new BufferedReader(new InputStreamReader(new FileInputStream(vecFile)));
			String line = vecReader.readLine();
			try{
				size = Integer.parseInt(line.substring(line.indexOf(' ') + 1));
			}catch(Exception e){
				
			}
			
			int r = 0;
			line = vecReader.readLine();
			while(line != null){
				String words[] = line.split(" ");
				
				if (words.length == size + 1){
					Double [] vec = new Double[size + 1];
					for (int i = 0; i < size; i++){
						vec[i] = Double.parseDouble(words[i+1]);
					}
					word2vec.put(words[0], vec);
					if ( ++r % 100 == 0){
						System.out.print('|');
						if ( r % 10000 == 0)
							System.out.println();
					}
						
				}
				line = vecReader.readLine();
			}
			
			vecReader.close();
			System.out.println("\nRead word2vec successfully!");
			return true;
		}catch(Exception e){
			System.out.println("Error When Read word2vec!" + e.getMessage());
			e.printStackTrace();
			return false;
		}
	}
	public Entry<Integer[],Double[][]> getWn(String word){
		
		return null;
	}
}